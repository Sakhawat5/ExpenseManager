#pragma checksum "C:\Users\Sakhawat\source\repos\ExpenseTrackerApp\ExpenseTrackerApp\Views\ExpenseTrackerReport\_expenseReport.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "94a3b9aa69f0183ed7a37e7d09624dccfeeac57e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ExpenseTrackerReport__expenseReport), @"mvc.1.0.view", @"/Views/ExpenseTrackerReport/_expenseReport.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Sakhawat\source\repos\ExpenseTrackerApp\ExpenseTrackerApp\Views\_ViewImports.cshtml"
using ExpenseTrackerApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Sakhawat\source\repos\ExpenseTrackerApp\ExpenseTrackerApp\Views\_ViewImports.cshtml"
using ExpenseTrackerApp.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Sakhawat\source\repos\ExpenseTrackerApp\ExpenseTrackerApp\Views\_ViewImports.cshtml"
using ExpenseTrackerWebApp.Data.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"94a3b9aa69f0183ed7a37e7d09624dccfeeac57e", @"/Views/ExpenseTrackerReport/_expenseReport.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8bf048d8ea6384e12724599a2f19e6e8adc697d6", @"/Views/_ViewImports.cshtml")]
    public class Views_ExpenseTrackerReport__expenseReport : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<script src=""https://code.highcharts.com/highcharts.js""></script>

<button id=""btnMonthlyReport"" class=""btn btn-info"">Monthly Report</button>
<button id=""btnWeeklyReport"" class=""btn btn-warning"">Weekly Report</button>
<button id=""btnDailyReport"" class=""btn btn-success"">Daily Report</button>
<div id=""container"" style=""min-width: 400px; height: 400px; margin: 0 auto"">

</div>

<script>

    $(document).ready(function () {
        $(""#btnDailyReport"").click(function(){
            var titleMessage = ""Expense for today is: "";

            $.ajax({
                type: ""GET"",
                url: ""/ExpenseTrackerReport/GetDailyExpense"",
                contentType: ""application/json"",
                dataType: ""JSON"",
                success : function(result){
                    var keys = Object.keys(result);
                    var dailydata = new Array();
                    var totalspent = 0.0;
                    for(var i = 0; i<keys.length;i++){
                        var arrl ");
            WriteLiteral(@"= new Array();
                        arrl.push(keys[i]);
                        arrl.push(result[keys[i]]);
                        totalspent += result[keys[i]];
                        dailydata.push(arrl);
                    }
                    createCharts(dailydata, titleMessage, totalspent.toFixed(2));
                }
            });
        });
        $(""#btnWeeklyReport"").click(function () {
            var titleMessage = ""Expenses in last four weeks is : "";

            $.ajax({
                type: ""GET"",
                url: ""/ExpenseTrackerReport/GetWeeklyExpense"",
                contentType: ""application/json"",
                dataType: ""json"",
                success: function (result) {
                    var keys = Object.keys(result);
                    var weeklydata = new Array();
                    var totalspent = 0.0;
                    for (var i = 0; i < keys.length; i++) {
                        var arrL = new Array();
                        ar");
            WriteLiteral(@"rL.push(keys[i]);
                        arrL.push(result[keys[i]]);
                        totalspent += result[keys[i]];
                        weeklydata.push(arrL);
                    }
                    createCharts(weeklydata, titleMessage, totalspent.toFixed(2));
                }
            })
        })

        $(""#btnMonthlyReport"").click(function () {
            var titleMessage = ""Expenses in last six months is : "";

            $.ajax({
                type: ""GET"",
                url: ""/ExpenseTrackerReport/GetMonthlyExpense"",
                contentType: ""application/json"",
                dataType: ""json"",
                success: function (result) {
                    var keys = Object.keys(result);
                    var monthlydata = new Array();
                    var totalspent = 0.0;
                    for (var i = 0; i < keys.length; i++) {
                        var arrL = new Array();
                        arrL.push(keys[i]);
                  ");
            WriteLiteral(@"      arrL.push(result[keys[i]]);
                        totalspent += result[keys[i]];
                        monthlydata.push(arrL);
                    }
                    createCharts(monthlydata, titleMessage, totalspent.toFixed(2));
                }
            })
        })
    })

    function createCharts(sum, titleText, totalspent) {
        Highcharts.chart('container', {
            chart: {
                type: 'column'
            },
            title: {
                text: titleText + ' ' + totalspent
            },
            xAxis: {
                type: 'category',
                labels: {
                    rotation: -45,
                    style: {
                        fontSize: '13px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Money spent'
                }
            },
  ");
            WriteLiteral(@"          legend: {
                enabled: false
            },
            tooltip: {
                pointFormat: 'Total money spent: <b>{point.y:.2f} </b>'
            },
            series: [{
                type: 'column',
                data: sum,
            }]
        });
    }

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
